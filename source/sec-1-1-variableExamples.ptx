<?xml version="1.0" encoding="UTF-8" ?>
<!-- This file is part of the book                      -->
<!--                                                    -->
<!-- An Introduction to Matrix Computations in Python   -->
<!--                                                    -->
<!-- Copyright (C) 2023  LBCC                           -->
<!-- See the file copyright.txt for copying conditions. -->

<section xml:id="section-variables">

    <title> Variables - examples</title>

    <introduction>
      In this section we will learn how to assign values to a variable in Python and display results. 

    </introduction>

    <objectives>
        <ul>
          <li>
            <p>
              Create a variable in Python using <c>=</c>
            </p>
          </li>
          <li>
            <p>
              Display a variable in Python using <c>print()</c>
            </p>
          </li>
        </ul>
      </objectives>



 
        

        <p>
          A <term> variable </term> is like a container that can be used to store information or data. 
          In Python you assign a variable using <c> = </c>. 
        </p>

          <example xml:id="example-FP" text="title">
            <title>You try</title>
            <p> For example run the Python code below by clicking the <em>Evaluate (Python)</em> button. </p>
            <sage language='python'>
              <input>
                a = 2*3
                print(a)
              </input>
            </sage>

            <p>Note that the function <c>print()</c> was needed to display the value of the variable. </p>

            <p>
              Change the value of the variable <em>a</em> by adding 5 after the 2*3 above and run the code again to see how the output changes.
            </p>

          </example>

        

        
        
        


        <p>
          Variables can be named using letters, underscores, numbers, etc. 
          Just be sure to use the exact same name to call your variable. 
        </p>

        <example> 
          <statement>
         
            <p>For example, the following code has a syntax error. Run the code as is and see what happens. </p>
  
          <sage language='python'>
            <input>
              Intro = "Hello again, world!"
              print(intro)
            </input>
          </sage>
          <p> Can you fix the bug so the code runs correctly? </p>
          </statement>
          <hint>
            <p>
              Variables are case sensitive and must be exactly the same to be recognized.
            </p>
          </hint>
        </example>

        

      

        <p>
          Python recognizes simple arithmetic symbols like <c>+ -, *, /</c>.  
        </p>

        <example>
          <sage language='python'>
            <input>
              sum_and_product = (3+4+5)*2
              print(sum_and_product)

              nine_cubed = 9**3
              print(nine_cubed)
            </input>
          </sage>
        </example>
        <aside>
          <p>Note that you use 9**3 to write <m>9^3</m>.</p>
        </aside>

        <example>
         <p> Change the value of the variable to try out some basic calculations in the box below. 
            You can use the standard order of operations and parentheses (PEMDAS) for your input. 
          </p>

          <sage language='python'>
            <input>
              arithmetic = (9+3)/3
              print(arithmetic)
            </input>
          </sage>
        </example>

        <p> Just like in math variables can be helpful when the information will change. </p>
        <example> 
          <p>Fill in the formula for the area of the circle in the code below using the given variable names. 
            Use the code to approximately compute the area of a circle with radius 5 and a circle with radius 13.
          </p>

          <sage language='python'>
            <input>
              radius = 4
              pi = 3.14
              circle_area = 
              print(circle_area)
            </input>
          </sage>
        </example> 

        <assemblage><!--to assemble or summarize important connected ideas-->
          <title> Summary </title>
          <p>
          <ul>
            <li>
              <p>
                A variable can be used as a container to store data or information. 
              </p>
            </li>
          </ul>
          <ul>
            <li>
              <p>
                Use <c>print(variable_name)</c> to display the information stored in the variable.
              </p>
            </li>
          </ul>
        </p>
        </assemblage>



</section>